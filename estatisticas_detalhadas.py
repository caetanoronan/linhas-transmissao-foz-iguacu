"""
Estat√≠sticas Detalhadas - Linhas de Transmiss√£o
Explica√ß√£o do gr√°fico "Distribui√ß√£o de linhas por munic√≠pio"
"""

import pandas as pd
from pathlib import Path

# Diret√≥rio base
base_dir = Path(__file__).parent

# Carregar dados
df_consolidado = pd.read_csv(base_dir / 'dados_consolidados.csv')
df_multiplas = pd.read_csv(base_dir / 'municipios_multiplas_linhas.csv')

print("=" * 80)
print("EXPLICA√á√ÉO: DISTRIBUI√á√ÉO DE LINHAS POR MUNIC√çPIO")
print("=" * 80)
print()
print("Este gr√°fico mostra QUANTOS munic√≠pios t√™m 1 linha, 2 linhas, 3 linhas, etc.")
print()
print("Exemplo de interpreta√ß√£o:")
print("  - Se h√° uma barra em '1' com valor 50, significa que 50 munic√≠pios")
print("    s√£o atravessados por apenas 1 linha de transmiss√£o")
print("  - Se h√° uma barra em '3' com valor 10, significa que 10 munic√≠pios")
print("    s√£o atravessados por 3 linhas diferentes")
print()

# Contar quantas linhas cada munic√≠pio tem
df_especificas = df_consolidado[df_consolidado['Tipo'] == 'especifica']
municipios_linhas = df_especificas.groupby('NM_MUN')['Linha'].nunique()

distribuicao = municipios_linhas.value_counts().sort_index()

print("-" * 80)
print("DISTRIBUI√á√ÉO COMPLETA:")
print("-" * 80)
for num_linhas, qtd_municipios in distribuicao.items():
    print(f"  {qtd_municipios} munic√≠pios t√™m {int(num_linhas)} linha(s) de transmiss√£o")

print()
print("=" * 80)
print("ESTAT√çSTICAS DETALHADAS POR ESTADO")
print("=" * 80)

for estado in sorted(df_especificas['Estado'].unique()):
    print()
    print(f"{'=' * 80}")
    print(f"ESTADO: {estado}")
    print(f"{'=' * 80}")
    
    df_estado = df_especificas[df_especificas['Estado'] == estado]
    
    # Total de munic√≠pios
    total_municipios = df_estado['NM_MUN'].nunique()
    print(f"\nüìç Total de munic√≠pios afetados: {total_municipios}")
    
    # Por voltagem
    print(f"\n‚ö° Munic√≠pios por voltagem:")
    voltagem_estado = df_estado.groupby('Voltagem')['NM_MUN'].nunique().sort_values(ascending=False)
    for voltagem, count in voltagem_estado.items():
        print(f"   ‚Ä¢ {voltagem} kV: {count} munic√≠pios")
    
    # Munic√≠pios com m√∫ltiplas linhas neste estado
    df_multiplas_estado = df_multiplas[df_multiplas['Estado'] == estado]
    if len(df_multiplas_estado) > 0:
        print(f"\nüîÑ Munic√≠pios com m√∫ltiplas linhas: {len(df_multiplas_estado)}")
        print(f"\n   Top 5 munic√≠pios com mais linhas em {estado}:")
        for idx, row in df_multiplas_estado.head(5).iterrows():
            print(f"   {row['Num_Linhas']}x - {row['Municipio']}: {row['Voltagens']} kV")
    
    # Munic√≠pios √∫nicos (apenas 1 linha)
    municipios_1_linha = df_estado.groupby('NM_MUN')['Linha'].nunique()
    municipios_1_linha = municipios_1_linha[municipios_1_linha == 1]
    print(f"\n   Munic√≠pios com apenas 1 linha: {len(municipios_1_linha)}")

print()
print("=" * 80)
print("ESTAT√çSTICAS DETALHADAS POR VOLTAGEM")
print("=" * 80)

for voltagem in sorted(df_especificas['Voltagem'].unique(), key=lambda x: int(x)):
    print()
    print(f"{'=' * 80}")
    print(f"VOLTAGEM: {voltagem} kV")
    print(f"{'=' * 80}")
    
    df_voltagem = df_especificas[df_especificas['Voltagem'] == voltagem]
    
    # Total de munic√≠pios
    total_municipios = df_voltagem['NM_MUN'].nunique()
    print(f"\n‚ö° Total de munic√≠pios afetados: {total_municipios}")
    
    # Por estado
    print(f"\nüó∫Ô∏è  Distribui√ß√£o por estado:")
    estado_voltagem = df_voltagem.groupby('Estado')['NM_MUN'].nunique().sort_values(ascending=False)
    for estado, count in estado_voltagem.items():
        print(f"   ‚Ä¢ {estado}: {count} munic√≠pios")
    
    # Quantos munic√≠pios t√™m SOMENTE esta voltagem
    todos_municipios_voltagem = df_voltagem['NM_MUN'].unique()
    municipios_exclusivos = []
    
    for municipio in todos_municipios_voltagem:
        linhas_municipio = df_especificas[df_especificas['NM_MUN'] == municipio]['Voltagem'].unique()
        if len(linhas_municipio) == 1:
            municipios_exclusivos.append(municipio)
    
    print(f"\n   Munic√≠pios afetados APENAS por {voltagem} kV: {len(municipios_exclusivos)}")
    
    # Alguns exemplos
    if len(municipios_exclusivos) > 0:
        print(f"   Exemplos: {', '.join(municipios_exclusivos[:5])}")

print()
print("=" * 80)
print("RESUMO GERAL - CRUZAMENTO DE INFORMA√á√ïES")
print("=" * 80)

print("\nüìä MUNIC√çPIOS MAIS IMPACTADOS (Top 10):")
print("   (Munic√≠pios atravessados por mais linhas diferentes)\n")
for idx, row in df_multiplas.head(10).iterrows():
    print(f"   {row['Num_Linhas']}x - {row['Municipio']} ({row['Estado']})")
    print(f"        Voltagens: {row['Voltagens']} kV")

print("\n" + "=" * 80)

# An√°lise especial: Foz do Igua√ßu
print("\nüîç DESTAQUE: FOZ DO IGUA√áU")
print("-" * 80)
foz = df_especificas[df_especificas['NM_MUN'] == 'Foz do Igua√ßu']
if len(foz) > 0:
    print(f"Foz do Igua√ßu √© atravessada por {len(foz)} linhas diferentes:")
    for idx, row in foz.iterrows():
        print(f"  ‚Ä¢ {row['Linha']}")
    print("\nIsso faz sentido, pois Foz do Igua√ßu √© o ponto de origem!")

print("\n" + "=" * 80)
print("‚úÖ AN√ÅLISE COMPLETA!")
print("=" * 80)
